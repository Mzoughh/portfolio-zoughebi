class MenuButton extends HTMLElement {
  constructor() {
    super();
    this.appendChild(this.querySelector("template").content.cloneNode(true));
    const btn = this.querySelector("button");
    const menu = document.getElementById("menu-content");
    menu.hidden = true;
    menu.classList.add("menu-content");
    const setExpanded = (expand) => {
      btn.setAttribute("aria-expanded", expand ? "true" : "false");
      menu.hidden = !expand;
    };
    btn.addEventListener("click", () => setExpanded(menu.hidden));
    const handleViewports = (e) => {
      setExpanded(e.matches);
      btn.hidden = e.matches;
    };
    const mediaQueries = window.matchMedia("(min-width: 50em)");
    handleViewports(mediaQueries);
    mediaQueries.addEventListener("change", handleViewports);
  }
}
customElements.define("menu-button", MenuButton);

//# sourceMappingURL=data:application/json;base64,